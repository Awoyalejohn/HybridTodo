@page "/todo"

@using HybridTodo.Shared.Abstractions.Clients
@using HybridTodo.Shared.Clients
@using HybridTodo.Shared.Services
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@inject ITodoClient TodoClient
@inject IComponentStateManager ComponentState

<PageTitle>Todo</PageTitle>

@if(TodoItems == null)
{
    <h1>No Todo Items...</h1>
}
else
{
    foreach (var todoItems in TodoItems)
    {
        <h1>@todoItems</h1>
    }
}

@code {
    private string[] TodoItems = [];
    private PersistingComponentStateSubscription _persistingSubscription;

    protected override async Task OnInitializedAsync()
    {
        if (ComponentState.TryTakeFromJson<string[]>(nameof(TodoItems), out var todos))
        {
            TodoItems = todos;
        }
        else
        {
            todos = await TodoClient.TestAsync();
            TodoItems = todos;
        }

        _persistingSubscription = ComponentState.RegisterOnPersisting(() =>
        {
            ComponentState.PersistAsJson(nameof(TodoItems), TodoItems);
            return Task.CompletedTask;
        });
    }
}