@page "/users"
@using HybridTodo.Shared.Abstractions.Clients
@using HybridTodo.Shared.Services

@attribute [Authorize]
@inject IUserClient UserClient
@inject IComponentStateManager ComponentState

<PageTitle>Users</PageTitle>

@if (UserList == null)
{
    <h1>No Todo Items...</h1>
}
else
{
    foreach (var user in UserList)
    {
        <h1>@user</h1>
    }
}

@code {
    private string[] UserList = [];
    private PersistingComponentStateSubscription _persistingSubscription;

    protected override async Task OnInitializedAsync()
    {
        if (ComponentState.TryTakeFromJson<string[]>(nameof(UserList), out var users))
        {
            UserList = users;
        }
        else
        {
            users = await UserClient.TestAsync();
            UserList = users;
        }

        _persistingSubscription = ComponentState.RegisterOnPersisting(() =>
        {
            ComponentState.PersistAsJson(nameof(UserList), UserList);
            return Task.CompletedTask;
        });
    }
}